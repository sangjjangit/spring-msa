plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.study.bang'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.cloud:spring-cloud-stream'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
        exclude group: 'org.springframework.cloud', module:'spring-cloud-starter-ribbon'
    }

//    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.postgresql:postgresql'
//    implementation 'com.mysql:mysql-connector-j'
    runtimeOnly('com.h2database:h2') // 인메모리 데이터베스 H2, 로컬, 테스트환경에서 사용하기 위해

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}